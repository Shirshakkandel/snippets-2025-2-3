{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"1. Create virtual environment": {
		"prefix": "virtualEnv",
		"body": [
			"#  python -m venv ${1:environmentName}",
		],
		"description": "snippet to create new Environment"
	},
	"2. Save dependencies": {
		"prefix": "requirementsFile",
		"body": [
			"# pip freeze > requirements.txt"
		],
		"description": "Save dependencies in requirement file"
	},
	"3.Read requirement and install": {
		"prefix": "installRequirement",
		"body": [
			"# pip install -r requirements.txt"
		],
		"description": "Save dependencies in requirement file"
	},
	"4. Install 2023-7-21 activeloop-course": {
		"prefix": "activeLoopPackage",
		"body": [
			"# pip install langchain==0.0.208 deeplake==3.9.27 openai==0.27.8 tiktoken"
		],
		"description": "LangChain & Vector Databases in Production Course by deeplake"
	},
	"5.Python Load Environment Variables": {
		"prefix": "loadEnv",
		"body": [
			"import os",
			"from dotenv import load_dotenv",
			"load_dotenv()",
			"os.environ[\"${1:OPENAI_API_KEY}\"] = os.getenv(\"${1:OPENAI_API_KEY}\")"
		],
		"description": "Load environment variables using dotenv"
	}
}