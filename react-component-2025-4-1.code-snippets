{
	"Orbit Component": {
		"prefix": "Orbit",
		"body": [
			"//TIME::1:6",
			"//https://github.com/Shirshakkandel/ai-saas-landing-page-template-2025-3-20/blob/main/src/components/Orbit.tsx",
			"//https://shirshak-ai-saas-landing-page-template.vercel.app/",
			"//https://github1s.com/Shirshakkandel/ai-saas-landing-page-template-2025-3-20/blob/main/src/components/Orbit.tsx",
			"'use client';",
			"",
			"import { HTMLAttributes } from 'react';",
			"import { twMerge } from 'tailwind-merge';",
			"",
			"type Props = {} & HTMLAttributes<HTMLDivElement>;",
			"",
			"export default function Orbit({ className }: Props) {",
			"  //SECTION LOGIC PART",
			"",
			"  //SECTION::UI PART",
			"  return (",
			"    <div",
			"      className={twMerge(",
			"        'size-[200px] rounded-full border border-gray-200/30',",
			"        className,",
			"      )}",
			"    ></div>",
			"  );",
			"}",
			"",
			"// Example usage of the Orbit component",
			"// This demonstrates how to use the Orbit component with different sizes and positions",
			"{",
			"  /* <div className=\"fixed bottom-0 left-0 right-0 top-18 z-30 overflow-hidden bg-gray-950\">",
			"  <div className=\"absolute-center isolate -z-10\">",
			"    <Orbit />",
			"  </div>",
			"",
			"  <div className=\"absolute-center isolate -z-10\">",
			"    <Orbit className=\"size-[350px]\" />",
			"  </div>",
			"",
			"  <div className=\"absolute-center isolate -z-10\">",
			"    <Orbit className=\"size-[500px]\" />",
			"  </div>",
			"",
			"  <div className=\"absolute-center isolate -z-10\">",
			"    <Orbit className=\"size-[650px]\" />",
			"  </div>",
			"</div>; */",
			"}"
		],
		"description": "Insert Orbit component with usage example and comments"
	},
	"Header Component with Orbit Navbar": {
		"prefix": "Header1AiSassOrbitNavbar",
		"scope": "javascriptreact,typescriptreact",
		"body": [
			"//https://shirshak-ai-saas-landing-page-template.vercel.app/",
			"//https://github.com/Shirshakkandel/ai-saas-landing-page-template-2025-3-20/blob/main/src/sections/Header.tsx",
			"//https://github1s.com/Shirshakkandel/ai-saas-landing-page-template-2025-3-20/blob/main/src/sections/Header.tsx",
			"//https://www.notion.so/shirshakkandel/Weekly-Planning-2025-3-30-4-5-2081-12-17-23-1c6fdab0071e801aa46aeffd28be0922?pvs=4#1c6fdab0071e8056a2b5d0a6d2a89f3d",
			"// Other component Snippet= Orbit, LogoConicGradientImage, ButtonPrimaryBorderGradient",
			"// tailwindCss Utilities =absoluteCenter borderGradient",
			"'use client';",
			"import Button, { ButtonProps } from '@/components/Button';",
			"import Logo from '@/components/Logo';",
			"import Orbit from '@/components/Orbit';",
			"import { useState } from 'react';",
			"import { twMerge } from 'tailwind-merge';",
			"",
			"export const navItems = [",
			"  {",
			"    name: 'Features',",
			"    href: '#features',",
			"  },",
			"  {",
			"    name: 'Pricing',",
			"    href: '#pricing',",
			"  },",
			"  {",
			"    name: 'Testimonials',",
			"    href: '#testimonials',",
			"  },",
			"];",
			"",
			"export const loginItems = [",
			"  {",
			"    buttonVariant: 'tertiary',",
			"    name: 'Login',",
			"    href: '#login',",
			"  },",
			"  {",
			"    buttonVariant: 'primary',",
			"    name: 'Sign Up',",
			"    href: '#sign-up',",
			"  },",
			"] satisfies {",
			"  name: string;",
			"  href: string;",
			"  buttonVariant: ButtonProps['variant'];",
			"}[];",
			"",
			"export const Header = () => {",
			"  //TIME::48M",
			"  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);",
			"",
			"  return (",
			"    <>",
			"      <header className=\"relative z-40 border-b border-gray-200/20\">",
			"        <div className=\"container\">",
			"          <div className=\"flex h-18 items-center justify-between lg:h-20\">",
			"            {/* COMMENT::Left Logo */}",
			"            <div className=\"flex items-center gap-4\">",
			"              {/* TIME:: 9:25= Conic Gradient logo */}",
			"              <Logo />",
			"              <div className=\"text-2xl font-extrabold\">",
			"                sphereal.ai",
			"              </div>",
			"            </div>",
			"",
			"            {/* TIME:: lg: Middle NavItems 24:30 */}",
			"            <div className=\"hidden h-full lg:block\">",
			"              <nav className=\"h-full\">",
			"                {navItems.map(({ href, name }) => (",
			"                  <a",
			"                    href={href}",
			"                    key={href}",
			"                    className=\"relative inline-flex h-full items-center px-10 text-xs font-bold uppercase tracking-widest text-gray-400 before:absolute before:bottom-0 before:left-0 before:h-2 before:w-px before:bg-gray-200/20 before:content-[''] last:after:absolute last:after:bottom-0 last:after:right-0 last:after:h-2 last:after:w-px last:after:bg-gray-200/20 last:after:content-['']\"",
			"                    onClick={e => {",
			"                      e.preventDefault();",
			"                      const element = document.querySelector(href);",
			"                      if (element != null) {",
			"                        element.scrollIntoView({",
			"                          behavior: 'smooth',",
			"                        });",
			"                      }",
			"                    }}",
			"                  >",
			"                    {name}",
			"                  </a>",
			"                ))}",
			"              </nav>",
			"            </div>",
			"",
			"            {/* COMMENT::Desktop Button */}",
			"            <div className=\"hidden gap-4 lg:flex\">",
			"              {loginItems.map(({ buttonVariant, name, href }) => (",
			"                <a href={href} key={name}>",
			"                  <Button variant={buttonVariant}>{name}</Button>",
			"                </a>",
			"              ))}",
			"            </div>",
			"",
			"            {/* COMMENT::Mobile Right Button */}",
			"            {/*TIME:: 17:25 */}",
			"            <div className=\"flex items-center lg:hidden\">",
			"              <button",
			"                onClick={() => setIsMobileNavOpen(curr => !curr)}",
			"                className=\"border-gradient size-10 rounded-lg\"",
			"              >",
			"                <div className=\"absolute-center\">",
			"                  <div",
			"                    className={twMerge(",
			"                      'h-0.5 w-4 -translate-y-1 bg-gray-100 transition duration-300',",
			"                      isMobileNavOpen && 'translate-y-0 rotate-45',",
			"                    )}",
			"                  ></div>",
			"                </div>",
			"",
			"                <div className=\"absolute-center\">",
			"                  <div",
			"                    className={twMerge(",
			"                      'h-0.5 w-4 translate-y-1 bg-gray-100 transition duration-300',",
			"                      isMobileNavOpen && 'translate-y-0 -rotate-45',",
			"                    )}",
			"                  ></div>",
			"                </div>",
			"              </button>",
			"            </div>",
			"          </div>",
			"        </div>",
			"      </header>",
			"",
			"      {/* SECTION::Mobile Nav Items */}",
			"      {isMobileNavOpen && (",
			"        <div className=\"fixed bottom-0 left-0 right-0 top-18 z-30 overflow-hidden bg-gray-950\">",
			"          {/* TIME::1:2:35=circle  */}",
			"          <div className=\"absolute-center isolate -z-10\">",
			"            <Orbit />",
			"          </div>",
			"",
			"          <div className=\"absolute-center isolate -z-10\">",
			"            <Orbit className=\"size-[350px]\" />",
			"          </div>",
			"",
			"          <div className=\"absolute-center isolate -z-10\">",
			"            <Orbit className=\"size-[500px]\" />",
			"          </div>",
			"",
			"          <div className=\"absolute-center isolate -z-10\">",
			"            <Orbit className=\"size-[650px]\" />",
			"          </div>",
			"",
			"          <div className=\"absolute-center isolate -z-10\">",
			"            <Orbit className=\"size-[650px]\" />",
			"          </div>",
			"",
			"          <div className=\"container h-full\">",
			"            <nav className=\"flex h-full flex-col items-center justify-center gap-4 py-8\">",
			"              {navItems.map(({ href, name }, index) => (",
			"                <a",
			"                  href={href}",
			"                  key={href}",
			"                  className=\"h-10 text-xs font-bold uppercase tracking-widest text-gray-400\"",
			"                  //TIME::4:33:50=",
			"                  onClick={e => {",
			"                    e.preventDefault();",
			"                    const element = document.querySelector(href);",
			"                    if (element && element != null) {",
			"                      setIsMobileNavOpen(false);",
			"                      element.scrollIntoView({ behavior: 'smooth' });",
			"                    }",
			"                  }}",
			"                >",
			"                  {name}",
			"                </a>",
			"              ))}",
			"",
			"              {loginItems.map(",
			"                ({ href, name, buttonVariant }, index) => (",
			"                  <a",
			"                    href={href}",
			"                    key={href}",
			"                    className=\"w-full max-w-sm\"",
			"                  >",
			"                    <Button variant={buttonVariant} block>",
			"                      {name}",
			"                    </Button>",
			"                  </a>",
			"                ),",
			"              )}",
			"            </nav>",
			"          </div>",
			"        </div>",
			"      )}",
			"    </>",
			"  );",
			"};",
			"",
			"export default Header;",
			"",
			"// This component defines a responsive header with navigation items and login buttons.",
			"// It includes a mobile-friendly menu that uses the Orbit component for visual effects."
		],
		"description": "Insert Header component with Orbit Navbar and comments"
	},
	"Logo Component with Conic Gradient Image": {
		"prefix": "LogoConicGradientImage",
		"scope": "javascriptreact,typescriptreact",
		"body": [
			"//https://shirshak-ai-saas-landing-page-template.vercel.app/",
			"//used inside Header1AiSassOrbitNavbar",
			"'use client';",
			"import { HTMLAttributes } from 'react';",
			"import { twMerge } from 'tailwind-merge';",
			"import logoImage from '@/assets/images/sphereal-logo.svg?url';",
			"",
			"type Props = {} & HTMLAttributes<HTMLDivElement>;",
			"",
			"export default function Logo(props: Props) {",
			"  //SECTION LOGIC PART",
			"  const { className, style, ...otherProps } = props;",
			"",
			"  //SECTION::UI PART",
			"  return (",
			"    <div",
			"      className={twMerge(",
			"        'size-10 bg-[conic-gradient(from_45deg,var(--color-violet-400),var(--color-fuchsia-400),var(--color-teal-400),var(--color-violet-400))]',",
			"        className,",
			"      )}",
			"      style={{",
			"        maskImage: `url(${logoImage.src})`,",
			"        maskSize: 'contain',",
			"        ...style,",
			"      }}",
			"      {...otherProps}",
			"    ></div>",
			"  );",
			"}",
			"",
			"// Example SVG for reference",
			"{",
			"  /* <svg width=\"120\" height=\"120\" viewBox=\"0 0 120 120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">",
			"    <path id=\"logo-path\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"",
			"        d=\"M108.794 77.4849C110.752 72.0225 111.818 66.1358 111.818 60C111.818 53.8648 110.752 47.9787 108.795 42.5168C107.956 48.0864 106.056 54.0157 103.174 60.0008C106.056 65.986 107.955 71.9153 108.794 77.4849ZM77.4836 108.795C71.9141 107.956 65.9849 106.056 59.9999 103.174C54.015 106.056 48.0859 107.956 42.5165 108.795C47.9785 110.752 53.8647 111.818 60 111.818C66.1353 111.818 72.0216 110.752 77.4836 108.795ZM51.0167 98.1226C49.2064 98.796 47.4265 99.3566 45.6898 99.8032C34.9183 102.573 27.4075 100.689 23.3591 96.641C19.3108 92.5926 17.4271 85.0818 20.1969 74.3103C20.6434 72.5737 21.204 70.7939 21.8773 68.9838C25.4392 74.5088 29.8105 79.9513 34.9291 85.07C40.0481 90.189 45.4912 94.5606 51.0167 98.1226ZM59.9998 93.9674C53.5061 90.3817 46.899 85.4691 40.7145 79.2845C34.5305 73.1005 29.6181 66.4939 26.0325 60.0007C29.6182 53.507 34.5308 46.8998 40.7154 40.7152C46.8996 34.531 53.5064 29.6186 59.9998 26.0329C66.4931 29.6185 73.0998 34.5309 79.284 40.7151C85.4686 46.8997 90.3812 53.5069 93.967 60.0007C90.3813 66.494 85.469 73.1006 79.2849 79.2847C73.1004 85.4691 66.4934 90.3817 59.9998 93.9674ZM68.983 98.1226C74.5084 94.5606 79.9513 90.1891 85.0703 85.0701C90.1889 79.9515 94.5602 74.5089 98.1221 68.9838C98.7954 70.7939 99.3559 72.5737 99.8025 74.3102C102.572 85.0816 100.689 92.5924 96.6402 96.6408C92.5918 100.689 85.0811 102.573 74.3096 99.8031C72.573 99.3565 70.7932 98.7959 68.983 98.1226ZM98.1223 51.0177C98.7959 49.207 99.3567 47.4267 99.8034 45.6896C102.564 34.955 100.702 27.4588 96.6826 23.4006L96.5995 23.3176C92.5414 19.2978 85.0452 17.4364 74.3105 20.1967C72.5735 20.6434 70.7933 21.2041 68.9828 21.8776C74.5079 25.4395 79.9506 29.8109 85.0694 34.9297C90.1886 40.0489 94.5603 45.4921 98.1223 51.0177ZM59.9999 16.8262C65.9848 13.9441 71.9139 12.0444 77.4834 11.2054C72.0215 9.24806 66.1352 8.18182 60 8.18182C53.8648 8.18182 47.9786 9.24805 42.5167 11.2053C48.0861 12.0444 54.0151 13.9441 59.9999 16.8262ZM23.2546 23.4637C23.3239 23.3941 23.3933 23.3246 23.4629 23.2554C27.5354 19.2785 35.0096 17.4505 45.6889 20.1966C47.4259 20.6432 49.2062 21.204 51.0169 21.8776C45.4916 25.4395 40.0488 29.811 34.93 34.9298C29.8108 40.049 25.4392 45.4921 21.8771 51.0177C21.2035 49.207 20.6427 47.4266 20.196 45.6895C17.4499 35.0103 19.2779 27.5362 23.2546 23.4637ZM11.2049 42.518C9.24788 47.9796 8.18182 53.8653 8.18182 60C8.18182 66.1353 9.2481 72.0216 11.2055 77.4837C12.0444 71.9144 13.9439 65.9855 16.8258 60.0008C13.9437 54.0161 12.044 48.0873 11.2049 42.518ZM17.4245 17.7232C6.65428 28.569 0 43.5074 0 60C0 93.1371 26.8629 120 60 120C93.1371 120 120 93.1371 120 60C120 43.4615 113.309 28.4859 102.486 17.6328L102.427 17.5736L102.367 17.5146C91.5142 6.69142 76.5385 0 60 0C43.507 0 28.5682 6.65465 17.7223 17.4254C17.6723 17.4744 17.6225 17.5238 17.5728 17.5734C17.5231 17.6231 17.4737 17.6731 17.4245 17.7232Z\"",
			"        fill=\"currentColor\" />",
			"</svg> */",
			"}"
		],
		"description": "Insert Logo component with conic gradient image and comments"
	},
	"Button Component with Primary Border Gradient": {
		"prefix": "ButtonPrimaryBorderGradient",
		"body": [
			"// https://www.youtube.com/watch?v=zqXyCteRQdg&t=19804s&ab_channel=FrontendTribe",
			"//https://shirshak-ai-saas-landing-page-template.vercel.app/",
			"//https://github.com/Shirshakkandel/ai-saas-landing-page-template-2025-3-20/blob/main/src/sections/Header.tsx",
			"// used inside Header1AiSassOrbitNavbar shortcutName=> ButtonPrimaryBorderGradient",
			"'use client';",
			"",
			"import { HTMLAttributes, useEffect, useState } from 'react';",
			"import { cva } from 'class-variance-authority';",
			"import {",
			"  animate,",
			"  motion,",
			"  useMotionTemplate,",
			"  useMotionValue,",
			"} from 'framer-motion';",
			"",
			"export type ButtonProps = {",
			"  block?: boolean;",
			"  variant?: 'primary' | 'secondary' | 'tertiary';",
			"} & HTMLAttributes<HTMLButtonElement>;",
			"",
			"const borderGradient =",
			"  'border-2 border-transparent [background:linear-gradient(var(--color-gray-950),var(--color-gray-950))_padding-box,conic-gradient(from_45deg,var(--color-violet-400),var(--color-fuchsia-400),var(--color-teal-400),var(--color-violet-400))_border-box] relative';",
			"",
			"const classes = cva(",
			"  'text-xs tracking-widest uppercase font-bold h-10 px-6 rounded-lg ',",
			"  {",
			"    variants: {",
			"      block: {",
			"        true: 'w-full',",
			"      },",
			"      variant: {",
			"        primary: borderGradient,",
			"        secondary: 'bg-gray-100 text-gray-900 ',",
			"        tertiary: 'bg-gray-800 text-gray-200',",
			"      },",
			"    },",
			"    defaultVariants: {",
			"      variant: 'primary',",
			"      block: false,",
			"    },",
			"  },",
			");",
			"",
			"export default function Button(props: ButtonProps) {",
			"  const {",
			"    className = '',",
			"    children,",
			"    variant = 'primary',",
			"    ...otherProps",
			"  } = props;",
			"  //SECTION::LOGIC PART",
			"  const [isHovered, setIsHovered] = useState(false);",
			"  const angle = useMotionValue(45);",
			"  const background = useMotionTemplate`linear-gradient(var(--color-gray-950),var(--color-gray-950)) padding-box, conic-gradient(from ${angle}deg,var(--color-violet-400),var(--color-fuchsia-400),var(--color-teal-400),var(--color-violet-400)) border-box`;",
			"  useEffect(() => {",
			"    if (isHovered) {",
			"      animate(angle, angle.get() + 360, {",
			"        duration: 1,",
			"        ease: 'linear',",
			"        repeat: Infinity,",
			"      });",
			"    } else {",
			"      animate(angle, 45, { duration: 0.5 });",
			"    }",
			"  }, [isHovered, angle]);",
			"",
			"  //SECTION::UI PART",
			"  return (",
			"    <motion.button",
			"      onMouseEnter={() => setIsHovered(true)}",
			"      onMouseLeave={() => setIsHovered(false)}",
			"      className={classes({ ...otherProps, variant, className })}",
			"      style={",
			"        variant === 'primary'",
			"          ? {",
			"              background: background,",
			"            }",
			"          : undefined",
			"      }",
			"    >",
			"      {children}",
			"    </motion.button>",
			"  );",
			"}"
		],
		"description": "Insert Button component with primary border gradient and comments"
	},
	"Section Header with Eyebrow": {
		"prefix": "SectionHeaderEyebrow",
		"body": [
			"'use client';",
			"",
			"type SectionHeaderProps = {",
			"  eyebrow: string;",
			"  title: string;",
			"  description: string;",
			"};",
			"",
			"export default function SectionHeader({",
			"  title,",
			"  eyebrow,",
			"  description,",
			"}: SectionHeaderProps) {",
			"  //SECTION::LOGIC PART",
			"  //SECTION::UI PART",
			"  return (",
			"    <>",
			"      <div className={`flex justify-center`}>",
			"        <p",
			"          className={`bg-gradient-to-r from-emerald-300 to-sky-300 bg-clip-text text-center font-semibold uppercase tracking-widest text-transparent`}",
			"        >",
			"          {eyebrow}",
			"        </p>",
			"      </div>",
			"",
			"      <h2 className={`mt-6 text-center font-serif text-3xl md:text-5xl`}>",
			"        {title}",
			"      </h2>",
			"",
			"      <p",
			"        className={`mx-auto mt-4 max-w-md text-center text-white/60 md:text-lg`}",
			"      >",
			"        {description}",
			"      </p>",
			"    </>",
			"  );",
			"}"
		],
		"description": "React functional component for a section header with an eyebrow, title, and description."
	}
}