{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	"cloudflareDownload": {
		"prefix": "cloudflareDownload",
		"scope": "html,css,javascript,typescript,javascriptreact,typescriptreact,json",
		"body": [
			"//winget install Cloudflare.Cloudflared",
			"//cloudflare --version"
		],
		"description": "Snippet to download and check Cloudflare version"
	},
	"cloudflareTunnel": {
		"prefix": "cloudflareTunnel",
		"body": [
			"//cloudflared tunnel --url http://localhost:${1:8080}"
		],
		"description": "Snippet to create a Cloudflare tunnel with a customizable URL"
	},
	"openNextjsCloudflare": {
		"prefix": "openNextjsCloudflare",
		"body": [
			"// https://opennext.js.org/cloudflare/get-started",
			"// bun add -D @opennextjs/cloudflare wrangler@latest",
			"// you may need to disable R2 storage setting in both and delete folder and again run.",
			"// \"preview\": \"opennextjs-cloudflare build && opennextjs-cloudflare preview\",",
			"// \"deploy\": \"opennextjs-cloudflare build && opennextjs-cloudflare deploy\",",
			"// \"upload\": \"opennextjs-cloudflare build && opennextjs-cloudflare upload\",",
			"// \"cf-typegen\": \"wrangler types --env-interface CloudflareEnv cloudflare-env.d.ts\""
		],
		"description": "OpenNext.js Cloudflare setup instructions"
	},
	"gitCached": {
		"prefix": "gitCached",
		"body": [
			"//git rm -r --cached ${1:.open-next/}"
		],
		"description": "Remove cached files from git"
	}
}